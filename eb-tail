#!/usr/bin/env ruby
require 'net/ssh'
require 'aws-sdk'
require 'pp'
require 'colorize'
require 'yaml'
require 'optparse'
require './lib/environment'
require './lib/server'


module EBTail

	class Main

		def init(args)
			Aws.use_bundled_cert! # Needed for windows platform, otherwise it gives an SSL error
			
			@servers = []
			@threads = []
			@credentials = {}
			@environments = {}

			begin
				load_config!

				environment = apply_args! args

				environment.find_instances
				puts "Found instance(s) [#{environment.instances.join(', ')}]".green

				environment.tail!
			rescue Interrupt
  				puts "STOPPING!".red
			rescue => err
				puts err.message.red
			end
		end

		def apply_args!(args)
			files = []
			p = OptionParser.new do |opts|
				opts.banner = "Usage: eb-logs env-name [options]"

				opts.on('-f File', '--file File', "File to tail, specify complete path.") do |f|
					files = [f]
				end

				opts.on_tail("-h", "--help", "Show this message") do
			        puts opts
			        exit
			    end
			end
			p.parse args

			raise "Environment name not specified, you have to pass it as argument to the program." if args.length == 0
			raise "Environment name (#{args[0]}) not found in config file." if !@environments.has_key?(args[0])

			environment = @environments[args[0]]

			environment.files = files if files.any?

			puts "Tail '#{environment.files.join(', ')}' on '#{environment.name}'".blue

			environment
		end

		def load_config!
			@config = YAML.load_file('config.yml')

			validate_config
		end

		def validate_config
			raise "No Environments found in config.yml" if !load_environments!
			puts "Found environment(s) [#{@environments.keys.join(', ')}] in config file.".green
		end


		def load_environments!
			@config['environments'].each do |env|
				@environments[env.has_key?('alias') ? env['alias'] : env['name']] = Environment.new(env)
			end

			@environments.length > 0
		end

	end

end

EBTail::Main.new.init(ARGV)
